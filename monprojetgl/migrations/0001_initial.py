# Generated by Django 5.1.6 on 2025-04-08 06:54

import django.core.validators
import django.db.models.deletion
import monprojetgl.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('reponse', models.TextField()),
                ('date_ajout', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='adresse email')),
                ('nom', models.CharField(max_length=100, verbose_name='nom complet')),
                ('mot_de_passe_hash', models.CharField(blank=True, editable=False, max_length=128, verbose_name='hash du mot de passe')),
                ('adresse', models.CharField(blank=True, max_length=255, null=True, verbose_name='adresse')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='téléphone')),
                ('fonction', models.CharField(blank=True, max_length=100, null=True, verbose_name='fonction')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='LinkedIn')),
                ('photo', models.ImageField(blank=True, default='profile_pics/default.jpg', help_text='Uploader une image (JPG, PNG, GIF, etc.)', null=True, upload_to='profile_pics/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'], message='Seules les images sont autorisées (JPG, PNG, GIF, etc.)')], verbose_name='photo de profil')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='biographie')),
                ('is_active', models.BooleanField(default=True, verbose_name='actif')),
                ('is_staff', models.BooleanField(default=False, verbose_name='équipe technique')),
                ('is_admin', models.BooleanField(default=False, verbose_name='administrateur')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name="date d'inscription")),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='dernière connexion')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'enseignant',
                'verbose_name_plural': 'enseignants',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matiere', models.CharField(max_length=100)),
                ('salle', models.CharField(max_length=50)),
                ('jour', models.CharField(max_length=20)),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('heure', models.TimeField()),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evenements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Planning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('jour', models.CharField(max_length=100)),
                ('salle', models.CharField(max_length=100)),
                ('cours', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='monprojetgl.cours')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='téléphone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='adresse')),
                ('about', models.TextField(blank=True, null=True, verbose_name='à propos')),
                ('profile_picture', models.ImageField(default='profile_pics/default.jpg', upload_to=monprojetgl.models.profile_picture_path, verbose_name='photo de profil')),
                ('job_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='poste')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'profil',
                'verbose_name_plural': 'profils',
            },
        ),
        migrations.CreateModel(
            name='Ressource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_cours', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date_cours', models.DateField()),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('fichier_cours', models.FileField(upload_to='cours_fichiers/')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ressources', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Associer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monprojetgl.cours')),
                ('ressource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monprojetgl.ressource')),
            ],
        ),
        migrations.CreateModel(
            name='Resultat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('note', models.FloatField()),
                ('date_resultat', models.DateField()),
                ('cours', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='monprojetgl.cours')),
            ],
        ),
    ]
